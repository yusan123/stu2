<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yu.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.yu.entity.Student" >
    <constructor >
      <idArg column="student_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="student_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_age" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="student_sex" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="subject_no" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="dept_no" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="student_status" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    student_id, student_no, student_name, student_age, student_sex, subject_no, dept_no, 
    student_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yu.entity.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yu.entity.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yu.entity.Student" >
    insert into student (student_id, student_no, student_name, 
      student_age, student_sex, subject_no, 
      dept_no, student_status)
    values (#{studentId,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{studentAge,jdbcType=INTEGER}, #{studentSex,jdbcType=TINYINT}, #{subjectNo,jdbcType=INTEGER}, 
      #{deptNo,jdbcType=INTEGER}, #{studentStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yu.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentNo != null" >
        student_no,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentAge != null" >
        student_age,
      </if>
      <if test="studentSex != null" >
        student_sex,
      </if>
      <if test="subjectNo != null" >
        subject_no,
      </if>
      <if test="deptNo != null" >
        dept_no,
      </if>
      <if test="studentStatus != null" >
        student_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentAge != null" >
        #{studentAge,jdbcType=INTEGER},
      </if>
      <if test="studentSex != null" >
        #{studentSex,jdbcType=TINYINT},
      </if>
      <if test="subjectNo != null" >
        #{subjectNo,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null" >
        #{deptNo,jdbcType=INTEGER},
      </if>
      <if test="studentStatus != null" >
        #{studentStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yu.entity.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.studentNo != null" >
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentAge != null" >
        student_age = #{record.studentAge,jdbcType=INTEGER},
      </if>
      <if test="record.studentSex != null" >
        student_sex = #{record.studentSex,jdbcType=TINYINT},
      </if>
      <if test="record.subjectNo != null" >
        subject_no = #{record.subjectNo,jdbcType=INTEGER},
      </if>
      <if test="record.deptNo != null" >
        dept_no = #{record.deptNo,jdbcType=INTEGER},
      </if>
      <if test="record.studentStatus != null" >
        student_status = #{record.studentStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set student_id = #{record.studentId,jdbcType=INTEGER},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_age = #{record.studentAge,jdbcType=INTEGER},
      student_sex = #{record.studentSex,jdbcType=TINYINT},
      subject_no = #{record.subjectNo,jdbcType=INTEGER},
      dept_no = #{record.deptNo,jdbcType=INTEGER},
      student_status = #{record.studentStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yu.entity.Student" >
    update student
    <set >
      <if test="studentNo != null" >
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentAge != null" >
        student_age = #{studentAge,jdbcType=INTEGER},
      </if>
      <if test="studentSex != null" >
        student_sex = #{studentSex,jdbcType=TINYINT},
      </if>
      <if test="subjectNo != null" >
        subject_no = #{subjectNo,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null" >
        dept_no = #{deptNo,jdbcType=INTEGER},
      </if>
      <if test="studentStatus != null" >
        student_status = #{studentStatus,jdbcType=TINYINT},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yu.entity.Student" >
    update student
    set student_no = #{studentNo,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_age = #{studentAge,jdbcType=INTEGER},
      student_sex = #{studentSex,jdbcType=TINYINT},
      subject_no = #{subjectNo,jdbcType=INTEGER},
      dept_no = #{deptNo,jdbcType=INTEGER},
      student_status = #{studentStatus,jdbcType=TINYINT}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
</mapper>